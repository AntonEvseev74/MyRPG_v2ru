package персонажи;

import главный.ИгроваяПанель;
import главный.ОбработчикКлавишь;
import объекты.О_Дверь;

import javax.imageio.ImageIO;
import java.awt.*;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;

import static константы.Константа.*;

public class Игрок extends Сущность {

    ИгроваяПанель игроваяПанель;
    ОбработчикКлавишь обработчикКлавишь;

    public final int экранХ;
    public final int экранУ;

    public int собраныеКлючи = 0; // сколько ключей у игрока
    public int счетчикШагов = 0; // нахождение в покое

    File p1 = new File("src/ресурсы/игрок/u1.png");
    File p2 = new File("src/ресурсы/игрок/u2.png");
    File p3 = new File("src/ресурсы/игрок/u3.png");
    File p4 = new File("src/ресурсы/игрок/d1.png");
    File p5 = new File("src/ресурсы/игрок/d2.png");
    File p6 = new File("src/ресурсы/игрок/d3.png");
    File p7 = new File("src/ресурсы/игрок/l1.png");
    File p8 = new File("src/ресурсы/игрок/l2.png");
    File p9 = new File("src/ресурсы/игрок/l3.png");
    File p10 = new File("src/ресурсы/игрок/r1.png");
    File p11 = new File("src/ресурсы/игрок/r2.png");
    File p12 = new File("src/ресурсы/игрок/r3.png");

    BufferedImage картинка = null;

    public Игрок(ИгроваяПанель игроваяПанель, ОбработчикКлавишь обработчикКлавишь) throws IOException {
        this.игроваяПанель = игроваяПанель;
        this.обработчикКлавишь = обработчикКлавишь;

        экранХ = игроваяПанель.ширинаЭкрана / 2;
        экранУ = игроваяПанель.высотаЭкрана / 2;

        зонаВзаимодействия = new Rectangle(11, 21, 28, 27);
        зонаВзаимодейстияОригинальнаяX = зонаВзаимодействия.x;
        зонаВзаимодейстияОригинальнаяY = зонаВзаимодействия.y;

        установкиИгрокаПоУмолчанию();
        создатьКартинки();
    }

    public void установкиИгрокаПоУмолчанию() {
        x = игроваяПанель.размерПлитки * 14;
        // x = gp.размерПлитки;
        y = игроваяПанель.размерПлитки * 15;
        //y = gp.размерПлитки*4;
        скорость = 4;
        //направление = "down"; // положение
        направление = ВНИЗ; // положение
    }

    public void создатьКартинки() throws IOException {
        верх1 = ImageIO.read(p1);
        верх2 = ImageIO.read(p2);
        верх3 = ImageIO.read(p3);
        низ1 = ImageIO.read(p4);
        низ2 = ImageIO.read(p5);
        низ3 = ImageIO.read(p6);
        лево1 = ImageIO.read(p7);
        лево2 = ImageIO.read(p8);
        лево3 = ImageIO.read(p9);
        право1 = ImageIO.read(p10);
        право2 = ImageIO.read(p11);
        право3 = ImageIO.read(p12);
    }

    public void обновить() {
        if (этоНажатаКлавишаДвижения()) { // если любая из клавишь движеня нажата, запускаем движение персонажа
            движениеИгрока(); // движение персонажа
        }
    }

    // если любая из клавишь движеня нажата, запускаем движение персонажа
    private boolean этоНажатаКлавишаДвижения() {
        return обработчикКлавишь.этоНажатоВВерх ||
                обработчикКлавишь.этоНажатоВНиз ||
                обработчикКлавишь.этоНажатоВЛево ||
                обработчикКлавишь.этоНажатоВПраво;
    }

    // движение персонажа
    private void движениеИгрока() {
        if (обработчикКлавишь.этоНажатоВВерх) направление = ВВЕРХ;
        else if (обработчикКлавишь.этоНажатоВНиз) направление = ВНИЗ;
        else if (обработчикКлавишь.этоНажатоВЛево) направление = ВЛЕВО;
        else if (обработчикКлавишь.этоНажатоВПраво) направление = ВПРАВО;

        стартАнимацияДвижения(); // анимация движения персонажа
    }

    // анимация движения персонажа
    private void стартАнимацияДвижения() {

        //Проверка коллизии тайла
        этоСтолкновение = false;
        игроваяПанель.менеджерПроверкиСтолкновений.столкновениеСПлиткой(this);

        // Проверка коллизии с объектом
        int индексОбъекта = игроваяПанель.менеджерПроверкиСтолкновений.столкновениеСОбъектом(this, true);
        взаимодействиеСОбъектом(индексОбъекта);

        // если нет коллизии
        if (!этоСтолкновение) {
            switch (направление) {
                case ВВЕРХ:
                    y -= скорость;
                    break;
                case ВНИЗ:
                    y += скорость;
                    break;
                case ВЛЕВО:
                    x -= скорость;
                    break;
                case ВПРАВО:
                    x += скорость;
                    break;
            }
        }

        // счетчик спрайтов
        счетчикКадров++;
        if (счетчикКадров > 15) {
            if (номерКадра < 4) номерКадра++;
            else номерКадра = 1;

            счетчикКадров = 1;
        } else {
            счетчикШагов++;
            if (счетчикШагов == 20) {
                номерКадра = 1;
                счетчикШагов = 0;
            }
        }


    }

    // Подбирание предметов
    public void взаимодействиеСОбъектом(int index) {
        if (index != 999) {
            String objectName = игроваяПанель.списокОбъектов[index].имя;
            switch (objectName) {
                case "Ключ":
                    игроваяПанель.вклЗвукЭффект(1);
                    собраныеКлючи++;
                    игроваяПанель.списокОбъектов[index] = null;
                    игроваяПанель.юзерИнтерфейс.showMessage("Вы нашли ключ");
                    break;
                case "Дверь":
                    if (собраныеКлючи > 0) {
                        int x = игроваяПанель.списокОбъектов[index].worldX;
                        int y = игроваяПанель.списокОбъектов[index].worldY;
                        if (игроваяПанель.списокОбъектов[index].этоСтолкновение) {
                            игроваяПанель.вклЗвукЭффект(3);
                            собраныеКлючи--;
                        }
                        игроваяПанель.списокОбъектов[index] = null;
                        игроваяПанель.списокОбъектов[index] = new О_Дверь(x, y, false);
                    } else if (!игроваяПанель.списокОбъектов[index].этоОткрыто)
                        игроваяПанель.юзерИнтерфейс.showMessage("Нужен ключ!");
                    break;
                case "Сундук":
                    if (собраныеКлючи > 0) {
                        игроваяПанель.вклЗвукЭффект(4);
                        собраныеКлючи--;
                        игроваяПанель.списокОбъектов[index] = null;
                        игроваяПанель.юзерИнтерфейс.showMessage("Сундук открыт");

                        игроваяПанель.юзерИнтерфейс.этоКонецИгры = true;
                        игроваяПанель.юзерИнтерфейс.showMessage("Конец игры!");
                    } else игроваяПанель.юзерИнтерфейс.showMessage("Нужен ключ!");
                    break;
                case "Ускорение":
                    игроваяПанель.вклЗвукЭффект(2);
                    скорость += 2;
                    игроваяПанель.списокОбъектов[index] = null;
                    игроваяПанель.юзерИнтерфейс.showMessage("Вы нашли зелье скорости");
                    break;
            }
        }
    }

    public void draw(Graphics2D g2) {
        switch (направление) {
            case ВВЕРХ:
                drawMoveToDirection(верх1, верх2, верх3);
                break;
            case ВНИЗ:
                drawMoveToDirection(низ1, низ2, низ3);
                break;
            case ВЛЕВО:
                drawMoveToDirection(лево1, лево2, лево3);
                break;
            case ВПРАВО:
                drawMoveToDirection(право1, право2, право3);
                break;
        }

        g2.drawImage(картинка, экранХ, экранУ, игроваяПанель.размерПлитки, игроваяПанель.размерПлитки, null);
    }

    // нарисовать картинку для движения по направлению
    private void drawMoveToDirection(BufferedImage image1, BufferedImage image2, BufferedImage image3) {
        if (номерКадра == 1) картинка = image1;
        if (номерКадра == 2) картинка = image2;
        if (номерКадра == 3) картинка = image1;
        if (номерКадра == 4) картинка = image3;
    }
}
